[
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-share-insert",
    "add_namespaces": false,
    "batch_size": 1,
    "pump": {
      "run_at_startup_if_not_populated": true
    },
    "sink": {
      "dataset": "{{@ system @}}-{{@ datatype @}}-share-insert",
      "deletion_tracking": false,
      "set_initial_offset": "onload",
      "type": "dataset"
    },
    "source": {
      "completeness": true,
      "dataset": "{{@ system @}}-{{@ datatype @}}-transform",
      "type": "dataset"
    },
    "transform": [
      {
        "rules": {
          "default": [
            [
              "discard",
              [
                "not",
                "_S._deleted"
              ]
            ],
            [
              "discard",
              [
                "is-empty",
                "_S.id"
              ]
            ],
            [
              "discard",
              [
                "is-empty",
                [
                  "hops",
                  {
                    "datasets": [
                      "{{@ system @}}-{{@ datatype @}}-share-insert chi",
                      "{{@ system @}}-{{@ datatype @}}-collect cc"
                    ],
                    "track-dependencies": false,
                    "where": [
                      [
                        "eq",
                        "_S.sesam-id",
                        "chi.sesam-id"
                      ],
                      [
                        "eq",
                        "chi.id",
                        "cc.id"
                      ]
                    ]
                  }
                ]
              ]
            ],
            [
              "copy",
              "sesam-id"
            ],
            [
              "add",
              "_id",
              [
                "concat",
                "_S._id",
                "-",
                [
                  "datetime-format",
                  "%Y-%m-%dT%H:%M:%SZ",
                  [
                    "now"
                  ]
                ]
              ]
            ],
            [
              "add",
              "_variables",
              [
                "apply",
                "payload",
                "_S."
              ]
            ],
            [
              "add",
              "::payload",
              [
                "dict",
                "query",
                "mutation ($input: CustomerCreateInput!) { {{@ datatype @}}Create(input: $input) { didSucceed inputErrors { code message path } {{@ datatype @}} { id } }}",
                "variables",
                [
                  "dict",
                  "input",
                  "_T._variables"
                ]
              ]
            ],
            [
              "add",
              "::entity",
              "_S."
            ]
          ],
          "payload": [
            [
              "copy",
              "*"
            ],
            [
              "remove",
              "_*"
            ],
            [
              "remove",
              "id"
            ],
            [
              "remove",
              "retry"
            ],
            [
              "remove",
              "retry_ts"
            ],
            [
              "remove",
              "sesam-id"
            ],
            [
              "if",
              [
                "is-not-empty",
                "_P._T._old_id"
              ],
              [
                "add",
                "id",
                "_T._old-id"
              ]
            ]
          ]
        },
        "type": "dtl"
      },
      {
        "operation": "get",
        "properties": {
          "url": ""
        },
        "replace_entity": false,
        "side_effects": true,
        "system": "{{@ system @}}",
        "type": "rest"
      },
      {
        "rules": {
          "default": [
            [
              "copy",
              "sesam-id"
            ],
            [
              "copy",
              "entity"
            ],
            [
              "merge-union",
              "_S.response"
            ],
            [
              "add",
              "id",
              "_T.data.{{@ datatype @}}Create.{{@ datatype @}}.id"
            ],
            [
              "sleep!",
              1
            ]
          ]
        },
        "type": "dtl"
      }
    ],
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-share-update",
    "add_namespaces": false,
    "batch_size": 1,
    "pump": {
      "run_at_startup_if_not_populated": true
    },
    "source": {
      "dataset": "{{@ system @}}-{{@ datatype @}}-transform",
      "type": "dataset"
    },
    "transform": [
      {
        "rules": {
          "default": [
            [
              "discard",
              [
                "not",
                "_S._deleted"
              ]
            ],
            [
              "add",
              "_deleted",
              false
            ],
            [
              "filter",
              [
                "is-not-empty",
                "_S.id"
              ]
            ],
            [
              "add",
              "::payload",
              [
                "dict",
                "query",
                "query ($businessId: ID!, ${{@ datatype @}}Id: ID!) { business(id: $businessId) { id {{@ datatype @}}(id: ${{@ datatype @}}Id) {id name business {id} firstName lastName email mobile phone fax tollFree website displayId address { addressLine1 addressLine2 city province { code name } country { code  } postalCode } currency { code  } createdAt modifiedAt overdueAmount { raw value } outstandingAmount { raw value } } } }",
                "variables",
                [
                  "dict",
                  "businessId",
                  "_S.business.id",
                  "{{@ datatype @}}Id",
                  "_S.id"
                ]
              ]
            ],
            [
              "merge",
              [
                "apply",
                "entity",
                "_S."
              ]
            ]
          ],
          "entity": [
            [
              "copy",
              "*",
              [
                "list",
                "business.*",
                "_*"
              ]
            ]
          ]
        },
        "type": "dtl"
      },
      {
        "operation": "update",
        "properties": {
          "url": ""
        },
        "replace_entity": false,
        "system": "{{@ system @}}",
        "type": "rest"
      },
      {
        "rules": {
          "default": [
            [
              "comment",
              "**** OPTIMISTIC LOCKING ****"
            ],
            [
              "add",
              "_old",
              [
                "first",
                [
                  "hops",
                  {
                    "datasets": [
                      "{{@ system @}}-{{@ datatype @}}-collect a"
                    ],
                    "where": [
                      [
                        "eq",
                        "_S.entity.id",
                        "a.id"
                      ]
                    ]
                  }
                ]
              ]
            ],
            [
              "add",
              "_json_old",
              [
                "json-transit",
                [
                  "apply",
                  "remove-under",
                  "_T._old"
                ]
              ]
            ],
            [
              "add",
              "_json_new",
              [
                "first",
                [
                  "json-transit",
                  [
                    "apply",
                    "remove-under",
                    "_S.response.data.business.{{@ datatype @}}"
                  ]
                ]
              ]
            ],
            [
              "add",
              "_hash_old",
              [
                "hash128",
                "murmur3",
                "_T._json_old"
              ]
            ],
            [
              "add",
              "_hash_new",
              [
                "hash128",
                "murmur3",
                "_T._json_new"
              ]
            ],
            [
              "if",
              [
                "eq",
                "_T._hash_old",
                "_T._hash_new"
              ],
              [
                [
                  "comment",
                  "**** SAME DATA IN SYSTEM AS IN SESAM ****"
                ],
                [
                  "copy",
                  "entity"
                ],
                [
                  "add",
                  "::payload",
                  [
                    "dict",
                    "query",
                    "mutation ($input: CustomerPatchInput!) { {{@ datatype @}}Patch(input: $input) { didSucceed inputErrors { code message path } {{@ datatype @}} { id } }}",
                    "variables",
                    [
                      "dict",
                      "input",
                      [
                        "apply",
                        "payload",
                        "_S.entity"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "comment",
                  "**** DIFFERENT DATA IN SYSTEM THAN IN SESAM ****"
                ],
                [
                  "discard"
                ]
              ]
            ]
          ],
          "payload": [
            [
              "copy",
              "*"
            ],
            [
              "remove",
              "_*"
            ],
            [
              "remove",
              "retry"
            ],
            [
              "remove",
              "businessId"
            ],
            [
              "remove",
              "sesam-id"
            ],
            [
              "if",
              [
                "is-not-empty",
                "_P._T._old_id"
              ],
              [
                "add",
                "id",
                "_T._old-id"
              ]
            ]
          ],
          "remove-under": [
            [
              "copy",
              "*",
              [
                "list",
                "_*",
                "$*"
              ]
            ]
          ]
        },
        "type": "dtl"
      },
      {
        "operation": "update",
        "properties": {
          "url": ""
        },
        "replace_entity": false,
        "side_effects": true,
        "system": "{{@ system @}}",
        "type": "rest"
      },
      {
        "rules": {
          "default": [
            [
              "copy",
              "entity"
            ],
            [
              "merge-union",
              "_S.response"
            ],
            [
              "comment",
              "*** Keep in mind that the batch_size should be kept to 1 in order for the make_pipe_fail logic to work properly ***"
            ],
            [
              "comment",
              "*** Details on error messages on mutations from Wave can be read here: https://developer.waveapps.com/hc/en-us/articles/360018571372 ***"
            ],
            [
              "if",
              [
                "eq",
                "_T.data.{{@ datatype @}}Patch.didSucceed",
                false
              ],
              [
                "merge",
                [
                  "apply",
                  "make_pipe_fail",
                  "_T.data.{{@ datatype @}}Patch.inputErrors"
                ]
              ],
              [
                "add",
                "id",
                "_T.data.{{@ datatype @}}Patch.{{@ datatype @}}.id"
              ]
            ],
            [
              "sleep!",
              1
            ]
          ],
          "make_pipe_fail": [
            [
              "fail!",
              "_T.message"
            ]
          ]
        },
        "type": "dtl"
      }
    ],
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-share-delete",
    "add_namespaces": false,
    "batch_size": 1,
    "pump": {
      "schedule_interval": 300
    },
    "source": {
      "dataset": "{{@ system @}}-{{@ datatype @}}-transform",
      "type": "dataset"
    },
    "transform": [
      {
        "rules": {
          "default": [
            [
              "discard",
              "_S._deleted"
            ],
            [
              "add",
              "_deleted",
              false
            ],
            [
              "filter",
              [
                "is-not-empty",
                "_S.id"
              ]
            ],
            [
              "add",
              "::payload",
              [
                "dict",
                "query",
                "mutation ($input: CustomerDeleteInput!) { {{@ datatype @}}Delete(input: $input) { didSucceed inputErrors { code message path } }}",
                "variables",
                [
                  "dict",
                  "input",
                  [
                    "dict",
                    "id",
                    "_S.id"
                  ]
                ]
              ]
            ],
            [
              "add",
              "::entity",
              "_S."
            ]
          ]
        },
        "type": "dtl"
      },
      {
        "operation": "update",
        "properties": {
          "url": ""
        },
        "replace_entity": false,
        "side_effects": true,
        "system": "{{@ system @}}",
        "type": "rest"
      },
      {
        "rules": {
          "default": [
            [
              "copy",
              "*"
            ],
            [
              "sleep!",
              1
            ]
          ]
        },
        "type": "dtl"
      }
    ],
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-collect",
    "namespaced_identifiers": false,
    "source": {
      "id_expression": "{{ node.id }}",
      "operation": "list",
      "operations": {
        "list": {
          "headers": {
            "X-Sesam-Page": "{% if (previous_request_headers is defined and previous_request_headers['X-Sesam-Page'] is defined) %}{{ previous_request_headers['X-Sesam-Page']|int + 1 }}{% else %}1{% endif %}"
          },
          "method": "POST",
          "next_page_link": "{{ url }}",
          "next_page_termination_strategy": "empty-result",
          "payload": {
            "query": "query($business_id: ID!, $page: Int!) {  business(id: $business_id) { id {{@ datatype @}}s (page: $page, pageSize: 2) { edges { node {id name business {id} firstName lastName email mobile phone fax tollFree website displayId address { addressLine1 addressLine2 city province { code name } country { code  } postalCode } currency { code  } createdAt modifiedAt overdueAmount { raw value } outstandingAmount { raw value } } } } } }",
            "variables": {
              "business_id": "{{@ account_id @}}",
              "page": "{{ headers['X-Sesam-Page'] }}sesam:markjson"
            }
          },
          "url": ""
        }
      },
      "payload_property": "data.business.{{@ datatype @}}s.edges",
      "system": "{{@ system @}}",
      "type": "rest"
    },
    "type": "pipe"
  }
]