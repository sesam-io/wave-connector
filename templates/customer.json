[
  {
    "_id": "{{@ system @}}-customer-collect",
    "type": "pipe",
    "source": {
      "type": "dataset",
      "dataset": "{{@ system @}}-business-collect"
    },
    "transform": [
      {
        "type": "dtl",
        "rules": {
          "default": [
            [
              "create",
              [
                "apply",
                "payload",
                [
                  "range",
                  1,
                  1
                ]
              ]
            ],
            [
              "discard"
            ]
          ],
          "payload": [
            [
              "add",
              "_id",
              [
                "concat",
                "_P._S._id",
                "-",
                [
                  "string",
                  "_S."
                ]
              ]
            ],
            [
              "add",
              "::payload",
              [
                "dict",
                "query",
                [
                  "concat",
                  "query {  business(id: \"",
                  "_P._S.node.id",
                  "\") { id customers (page: ",
                  [
                    "string",
                    "_S."
                  ],
                  ", pageSize: 200) { edges { node {id name business {id} firstName lastName email mobile phone fax tollFree website displayId address { addressLine1 addressLine2 city province { code name } country { code  } postalCode } currency { code  } createdAt modifiedAt overdueAmount { raw value } outstandingAmount { raw value } } } } } }"
                ],
                "variables",
                {}
              ]
            ]
          ]
        }
      },
      {
        "type": "rest",
        "system": "{{@ system @}}",
        "id_expression": "{{ node.id }}",
        "operation": "get",
        "updated_expression": "{{ modifiedAt }}"
      },
      {
        "type": "dtl",
        "rules": {
          "default": [
            ["filter",["is-not-empty","_S.response.data.business.customers.edges.node"]],
            ["create",
              ["apply", "customer", "_S.response.data.business.customers.edges.node"]
            ],
            ["discard"]
          ],
          "customer": [
            [
              "copy",
              "*"
            ],
            [
              "add",
              "_id",
              "_S.id"
            ],
            ["add","$last-modified","_S.modifiedAt"]
          ]
        }
      }
    ],
    "pump": {
      "partial_rescan_delta": 10,
      "partial_rescan_run_count": 1,
      "rescan_cron_expression": "0 0 * * ?"
    },
    "namespaces": {"identity": ""}
  },
  {
    "_id": "{{@ system @}}-customer-share-insert",
    "type": "pipe",
    "source": {
      "type": "dataset",
      "dataset": "{{@ system @}}-customer-transform",
      "completeness": true
    },
      "sink": {
      "type": "dataset",
      "dataset": "{{@ system @}}-customer-share-insert",
      "set_initial_offset": "onload",
      "deletion_tracking": false
    },
    "transform": [
      {
        "type": "dtl",
        "rules": {
          "default": [
            ["discard",
              ["not", "_S._deleted"]
            ],
            [
              "discard",
              [
                "is-empty",
                "_S.id"
              ]
            ],
            ["discard",
              ["is-empty",
                ["hops", {
                  "datasets": ["{{@ system @}}-customer-share-insert chi", "{{@ system @}}-customer-collect cc"],
                  "where": [
                    ["eq", "_S.sesam-id", "chi.sesam-id"],
                    ["eq", "chi.id", "cc.id"]
                  ],
                  "track-dependencies": false
                }]
              ]
            ],
            [
              "copy",
              "sesam-id"
            ],
            [
              "add",
              "_id", ["concat","_S._id","-",["datetime-format", "%Y-%m-%dT%H:%M:%SZ",["now"]]]
            ],
            [
              "add",
              "_variables",
              [
                "apply",
                "payload",
                "_S."
              ]
            ],
            [
              "add",
              "::payload",
              [
                "dict",
                "query",
                "mutation ($input: CustomerCreateInput!) { customerCreate(input: $input) { didSucceed inputErrors { code message path } customer { id } }}",
                "variables",
                [
                  "dict",
                  "input",
                  "_T._variables"
                ]
              ]
            ],
            [
              "add",
              "::entity",
              "_S."
            ]
          ],
          "payload": [
            [
              "copy",
              "*"
            ],
            [
              "remove",
              "_*"
            ],
            [
              "remove",
              "id"
            ],
            [
              "remove",
              "retry"
            ],
            [
              "remove",
              "retry_ts"
            ],
            [
              "remove",
              "sesam-id"
            ],
            [
              "if",
              [
                "is-not-empty",
                "_P._T._old_id"
              ],
              [
                "add",
                "id",
                "_T._old-id"
              ]
            ]
          ]
        }
      },
      {
        "type": "rest",
        "system": "{{@ system @}}",
        "operation": "get",
        "properties": {
          "url": ""
        },
        "replace_entity": false,
        "side_effects": true
      },
      {
        "type": "dtl",
        "rules": {
          "default": [
            [
              "copy",
              "sesam-id"
            ],
            [
              "copy",
              "entity"
            ],
            [
              "merge-union",
              "_S.response"
            ],
            [
              "add",
              "id",
              "_T.data.customerCreate.customer.id"
            ],
            [
              "sleep!",
              1
            ]
          ]
        }
      }
    ],
    "pump": {
      "run_at_startup_if_not_populated": true
    },
    "add_namespaces": false,
    "batch_size": 1
  },
  {
    "_id": "{{@ system @}}-customer-share-update",
    "type": "pipe",
    "source": {
      "type": "dataset",
      "dataset": "{{@ system @}}-customer-transform"
    },
    "transform": [
      {
        "type": "dtl",
        "rules": {
          "default": [
            ["discard",
              ["not", "_S._deleted"]
            ],
            ["add", "_deleted", false],
            [
              "filter",
              [
                "is-not-empty",
                "_S.id"
              ]
            ],
            [
              "add",
              "::payload",
              [
                "dict",
                "query",
                "query ($businessId: ID!, $customerId: ID!) { business(id: $businessId) { id customer(id: $customerId) {id name business {id} firstName lastName email mobile phone fax tollFree website displayId address { addressLine1 addressLine2 city province { code name } country { code  } postalCode } currency { code  } createdAt modifiedAt overdueAmount { raw value } outstandingAmount { raw value } } } }",
                "variables",
                [
                  "dict",
                  "businessId",
                  "_S.businessId",
                  "customerId",
                  "_S.id"
                ]
              ]
            ],
            [
              "add",
              "::entity",
              "_S."
            ]
          ]
        }
      },
      {
        "type": "rest",
        "system": "{{@ system @}}",
        "operation": "update",
        "properties": {
          "url": ""
        },
        "replace_entity": false
      },
      {
        "type": "dtl",
        "rules": {
          "default": [
            [
              "comment",
              "**** OPTIMISTIC LOCKING ****"
            ],
            [
              "add",
              "_old",
              [
                "first",
                [
                  "hops",
                  {
                    "datasets": [
                      "{{@ system @}}-customer-collect a"
                    ],
                    "where": [
                      [
                        "eq",
                        "_S.entity.id",
                        "a.id"
                      ]
                    ]
                  }
                ]
              ]
            ],
            [
              "add",
              "_json_old",
              [
                "json-transit",
                [
                  "apply",
                  "remove-under",
                  "_T._old"
                ]
              ]
            ],
            [
              "add",
              "_json_new",
              [
                "first",
                [
                  "json-transit",
                  [
                    "apply",
                    "remove-under",
                    "_S.response.data.business.customer"
                  ]
                ]
              ]
            ],
            [
              "add",
              "_hash_old",
              [
                "hash128",
                "murmur3",
                "_T._json_old"
              ]
            ],
            [
              "add",
              "_hash_new",
              [
                "hash128",
                "murmur3",
                "_T._json_new"
              ]
            ],
            [
              "if",
              [
                "eq",
                "_T._hash_old",
                "_T._hash_new"
              ],
              [
                [
                  "comment",
                  "**** SAME DATA IN SYSTEM AS IN SESAM ****"
                ],
                [
                  "copy",
                  "entity"
                ],
                [
                  "add",
                  "::payload",
                  [
                    "dict",
                    "query",
                    "mutation ($input: CustomerPatchInput!) { customerPatch(input: $input) { didSucceed inputErrors { code message path } customer { id } }}",
                    "variables",
                    [
                      "dict",
                      "input",
                      [
                        "apply",
                        "payload",
                        "_S.entity"
                      ]
                    ]
                  ]
                ]
              ],
              [
                [
                  "comment",
                  "**** DIFFERENT DATA IN SYSTEM THAN IN SESAM ****"
                ],
                [
                  "discard"
                ]
              ]
            ]
          ],
          "payload": [
            [
              "copy",
              "*"
            ],
            [
              "remove",
              "_*"
            ],
            [
              "remove",
              "retry"
            ],
            [
              "remove",
              "businessId"
            ],
            [
              "remove",
              "sesam-id"
            ],
            [
              "if",
              [
                "is-not-empty",
                "_P._T._old_id"
              ],
              [
                "add",
                "id",
                "_T._old-id"
              ]
            ]
          ],
          "remove-under": [
            ["copy", "*", ["list", "_*", "$*"]]
          ]
        }
      },
      {
        "type": "rest",
        "system": "{{@ system @}}",
        "operation": "update",
        "properties": {
          "url": ""
        },
        "replace_entity": false,
        "side_effects": true
      },
      {
        "type": "dtl",
        "rules": {
          "default": [
            [
              "copy",
              "entity"
            ],
            [
              "merge-union",
              "_S.response"
            ],
            [
              "add",
              "id",
              "_T.data.customerCreate.customer.id"
            ],
            [
              "sleep!",
              1
            ]
          ]
        }
      }
    ],
    "pump": {
      "run_at_startup_if_not_populated": true
    },
    "add_namespaces": false,
    "batch_size": 1
  },
  {
    "_id": "{{@ system @}}-customer-share-delete",
    "type": "pipe",
    "source": {
      "type": "dataset",
      "dataset": "{{@ system @}}-customer-transform"
    },
    "transform": [{
      "type": "dtl",
      "rules": {
        "default": [
          ["discard", "_S._deleted"],
          ["add", "_deleted", false],
          ["filter",
            ["is-not-empty", "_S.id"]
          ],
          ["add", "::payload",
            ["dict", "query", "mutation ($input: CustomerDeleteInput!) { customerDelete(input: $input) { didSucceed inputErrors { code message path } }}", "variables",
              ["dict", "input",
                ["dict", "id", "_S.id"]
              ]
            ]
          ],
          [
            "add",
            "::entity",
            "_S."
          ]
        ]
      }
    }, {
      "type": "rest",
      "system": "{{@ system @}}",
      "operation": "update",
      "properties": {
        "url": ""
      },
      "replace_entity": false,
      "side_effects": true
    }, {
      "type": "dtl",
      "rules": {
        "default": [
          ["copy", "*"],
          ["sleep!", 1]
        ]
      }
    }],
    "pump": {
      "schedule_interval": 300
    },
    "add_namespaces": false,
    "batch_size": 1
  }  
]
